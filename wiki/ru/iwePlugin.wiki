#summary описание интерфейса iwePlugin

= Общая информация =

*iwePlugin* - основной интерфейс для плагинов.

Плагин - интерфейс к динамически подгружаемой библиотеке. The library provides method to create the contained plugin as the basic *iwePlugin* interface. Other interfaces may be requested from the plugin by calling the *!GetInterface* function. Plugin object can't be copied, use the *!GetInterface* function instead to obtain pointer to the plugin or copy the existing pointer if you are sure to control the object's lifetime. Program must avoid the explicit destruction of the plugin, because it may destroy the object, that can be used somewhere else. Use the *Release* function to free the pointer to the interface when it is no longer needed.

*Важные модификации:*
|| *Дата* || *Автор* || *Описание* ||
|| 19.06.2009  || A. Abramov || Создание ||


= Структура и связи = 

Следующая схема показывает структуру наследования классов плагинов:

http://webapptools.googlecode.com/svn/wiki/images/iweplugin_graph.png [GraphLegend [см. легенду]]

Данная схема не является окончательным отображением структуры и может быть дополнена в любой момент. Схема предназначена для наглядного понимания иерархии наследования интерфейсов плагинов.

= Описание интерфейса =
== Функции ==
=== iwePlugin ===
Конструктор. 
{{{
iwePlugin::iwePlugin ( WeDispatch* krnl, void* handle = NULL ); 	
}}}
*Параметры:*
    _krnl_      - Обратная ссылка на ядро системы
    
    _handle_    - Хэндл динамической библиотеки содержащей плагин (может быть *NULL*).

=== ~iwePlugin ===
Деструктор
{{{
iwePlugin::~iwePlugin ( ) [inline, virtual]
}}}

== Атрибуты ==
== Защищенные Атрибуты ==
== Закрытые Функции ==
